{"version":3,"file":"static/js/484.a2f60cc6.chunk.js","mappings":"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","sources":["components/AppTable.jsx","components/AppTagEvent.jsx","components/AppCardEvent.jsx","components/AppCalendar.jsx","components/AppReminder.jsx","home/mock-data.js","home/Home.jsx","home/index.js"],"sourcesContent":["import React from 'react';\nimport { Table, TableCaption, TableContainer, Tbody, Td, Th, Thead, Tr } from '@chakra-ui/react';\n\nexport function withColumns(cols) {\n  // eslint-disable-next-line func-names\n  return function ({ data }) {\n    // eslint-disable-next-line no-console\n    return (\n      <Tr>\n        {cols.map((col) => (\n          <Td key={`${col.key}_${data.id}`}>\n            {col.render ? col.render(data) : data[col.dataIndex]}\n          </Td>\n        ))}\n      </Tr>\n    );\n  };\n}\n\nexport default function AppTable({ dataSource, columns, caption, hasHeader }) {\n  const AppRow = React.useMemo(() => withColumns(columns), [columns]);\n\n  return (\n    <TableContainer p={3} rounded=\"md\" shadow=\"md\" borderWidth=\"1px\">\n      <Table variant=\"simple\">\n        {caption && <TableCaption>{caption}</TableCaption>}\n        {hasHeader && (\n          <Thead>\n            {columns.map((col) => (\n              <Th scope=\"col\" key={col.key}>\n                {col.title}\n              </Th>\n            ))}\n          </Thead>\n        )}\n        <Tbody>\n          {dataSource.map((data) => (\n            <AppRow key={`row_${data.id}`} data={data} />\n          ))}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport { Box, Heading, Text } from '@chakra-ui/react';\n\nexport default function AppTagEvent({ number, title, status }) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flex: '1',\n        flexDir: 'row',\n        gap: '1rem',\n        p: 5,\n        rounded: 'md',\n        shadow: 'md',\n        borderWidth: '1px',\n      }}\n    >\n      <Heading fontSize=\"4xl\">{number}</Heading>\n      <Box>\n        <Text>{title}</Text>\n        <Text>{status}</Text>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Badge, Box, Heading, Image, Text, theme, useColorModeValue } from '@chakra-ui/react';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\n\nexport default function AppCardEvent({ linkImage, title, status, time, location, linkDetail }) {\n  const linkTextColor = useColorModeValue(theme.colors.gray[600], theme.colors.gray[400]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flex: '1',\n        gap: '1rem',\n        position: 'relative',\n        p: 3,\n        rounded: 'md',\n        shadow: 'md',\n        borderWidth: '1px',\n      }}\n    >\n      <Box sx={{ maxHeight: '120px', maxWidth: '120px' }}>\n        <Image sx={{ width: '100%', height: '100%', objectFit: 'contain' }} src={linkImage} />\n      </Box>\n      <Box sx={{ gap: '1.3', width: '100%' }}>\n        <Heading size=\"md\">{title}</Heading>\n        <Badge variant=\"solid\" colorScheme=\"green\" rounded=\"md\">\n          {status}\n        </Badge>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <FontAwesomeIcon icon={solid('clock')} style={{ width: '1.3rem' }} />\n          <Box>{time}</Box>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <FontAwesomeIcon icon={solid('location-dot')} style={{ width: '1.3rem' }} />\n          <Box>{location}</Box>\n        </Box>\n        {linkDetail && (\n          <Box sx={{ textAlign: 'right' }}>\n            <Text as={Link} color={linkTextColor} fontSize=\"sm\" to={linkDetail}>\n              Xem chi tiết\n            </Text>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport { Calendar } from '@mantine/dates';\nimport 'dayjs/locale/de';\nimport { MantineProvider } from '@mantine/core';\n\nexport default function AppCalendar({ caption }) {\n  const [value, setValue] = useState(null);\n  return (\n    <MantineProvider>\n      <Box\n        sx={{\n          maxW: '320px',\n          display: 'flex',\n          flexDir: 'column',\n          gap: '.6rem',\n        }}\n      >\n        <Heading size=\"md\">{caption}</Heading>\n        <Calendar value={value} onChange={setValue} fullWidth />\n      </Box>\n    </MantineProvider>\n  );\n}\n","import React from 'react';\nimport { Box, Heading, Text, theme } from '@chakra-ui/react';\n\nfunction ReminderItem({ title, endTime, color = theme.colors.red[400] }) {\n  const endAt = new Date(endTime);\n\n  return (\n    <Box sx={{ p: 2, m: 2, borderLeft: `.3rem solid ${color}`, boxShadow: 'sm' }}>\n      <Heading size=\"md\">{title}</Heading>\n      <Text>\n        Hạn chót:&nbsp;\n        {endAt.toLocaleString('vi-VN', { timeZone: 'Asia/Ho_Chi_Minh' })}\n      </Text>\n    </Box>\n  );\n}\n\nexport default function AppReminder({ caption, data }) {\n  return (\n    <Box\n      sx={{\n        marginTop: 4,\n      }}\n    >\n      <Heading size=\"md\">{caption}</Heading>\n      <Box\n        sx={{\n          mt: 3,\n          maxHeight: '20rem',\n          overflowY: 'auto',\n        }}\n        css={{\n          '&::-webkit-scrollbar': {\n            width: '4px',\n          },\n          '&::-webkit-scrollbar-track': {\n            width: '6px',\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: theme.colors.gray[300],\n            borderRadius: '24px',\n          },\n        }}\n      >\n        {data.map((item) => (\n          <ReminderItem key={item.id} title={item.title} endTime={item.endTime} />\n        ))}\n      </Box>\n    </Box>\n  );\n}\n","const tableData = [\n  {\n    id: 1,\n    desc: 'Quảng bá sự kiện',\n    content: { link: 2, completedJob: 0, totalJob: 3 },\n    checked: false,\n  },\n  {\n    id: 2,\n    desc: 'Tạo nội dung quảng bá',\n    content: { link: 0, completedJob: 0, totalJob: 0 },\n    checked: true,\n  },\n];\n\nconst tagData = [\n  { id: 1, number: 1, title: 'Sự kiện', status: 'Đang diễn ra' },\n  { id: 2, number: 1, title: 'Sự kiện', status: 'Đang diễn ra' },\n  { id: 3, number: 1, title: 'Sự kiện', status: 'Đang diễn ra' },\n];\n\nconst cardData = [\n  {\n    title: 'Ngày nhà giáo Việt Nam 20/11',\n    linkImage:\n      'https://i.natgeofe.com/n/3861de2a-04e6-45fd-aec8-02e7809f9d4e/02-cat-training-NationalGeographic_1484324_3x4.jpg',\n    status: 'Đang diễn ra',\n    time: '20/11/2020',\n    location: 'UIT',\n    linkDetail: '#',\n  },\n  {\n    title: 'Sự kiện 2',\n    linkImage:\n      'https://www.purina.co.uk/sites/default/files/2020-12/Understanding%20Your%20Cat%27s%20Body%20LanguageHERO.jpg',\n    status: 'Sắp diễn ra',\n    time: '17/3/2020',\n    location: 'UIT',\n    linkDetail: '#',\n  },\n];\n\nconst reminders = [\n  { id: 1, title: 'Thiết kế poster', endTime: Date.UTC(2022, 20, 5, 23, 59, 0, 0) },\n  {\n    id: 2,\n    title: 'Đăng bài viết trên các group UIT',\n    endTime: Date.UTC(2022, 20, 5, 23, 59, 0, 0),\n  },\n  { id: 3, title: 'Lập Form đăng ký tham gia', endTime: Date.UTC(2022, 20, 5, 23, 59, 0, 0) },\n  { id: 4, title: 'Lập Form đăng ký tham gia', endTime: Date.UTC(2022, 20, 5, 23, 59, 0, 0) },\n  { id: 5, title: 'Lập Form đăng ký tham gia', endTime: Date.UTC(2022, 20, 5, 23, 59, 0, 0) },\n  { id: 6, title: 'Lập Form đăng ký tham gia', endTime: Date.UTC(2022, 20, 5, 23, 59, 0, 0) },\n];\n\nexport default { tableData, tagData, cardData, reminders };\n","import React, { useState } from 'react';\nimport { Box, Checkbox, Flex, Heading, Link, Text, theme } from '@chakra-ui/react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport AppTable from 'components/AppTable';\nimport AppTagEvent from 'components/AppTagEvent';\nimport AppCardEvent from 'components/AppCardEvent';\nimport AppCalendar from 'components/AppCalendar';\nimport AppReminder from 'components/AppReminder';\nimport mockData from './mock-data';\nimport 'react-calendar/dist/Calendar.css';\n\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Description',\n    dataIndex: 'desc',\n    key: 'desc',\n  },\n  {\n    title: 'Content',\n    dataIndex: 'content',\n    key: 'content',\n    render: ({ content }) => (\n      <Flex gap={2} sx={{ justifyContent: 'right', width: '100%' }}>\n        <FontAwesomeIcon color={theme.colors.blackAlpha[500]} icon={solid('paperclip')} />\n        <Text>{content.link}</Text>\n        <FontAwesomeIcon color={theme.colors.blackAlpha[500]} icon={solid('square-check')} />\n        <Text>{`${content.completedJob}/${content.totalJob}`}</Text>\n      </Flex>\n    ),\n  },\n  {\n    title: 'Checked',\n    dataIndex: 'checked',\n    key: 'checked',\n    render: ({ checked }) => (\n      <Box sx={{ textAlign: 'right' }}>\n        <Checkbox isChecked={checked} colorScheme=\"green\" />\n      </Box>\n    ),\n  },\n];\n\nexport default function Home() {\n  const [dataSource] = useState(mockData.tableData);\n  const [tagEvents] = useState(mockData.tagData);\n  const [cardEvents] = useState(mockData.cardData);\n  const [reminders] = useState(mockData.reminders);\n\n  return (\n    <div>\n      <Heading color=\"green\">Trang chủ</Heading>\n      <Box sx={{ display: 'flex', justifyContent: 'stretch', marginTop: '1rem', gap: '1rem' }}>\n        <Box sx={{ flex: '1' }}>\n          <Box gap=\"4\" sx={{ display: 'flex' }}>\n            {tagEvents.map((tagEvent) => (\n              <AppTagEvent\n                key={`tag_event_${tagEvent.id}`}\n                number={tagEvent.number}\n                title={tagEvent.title}\n                status={tagEvent.status}\n              />\n            ))}\n          </Box>\n          <Box sx={{ textAlign: 'right', mt: '.5rem' }}>\n            <Text as={Link} to=\"/\">\n              Xem tất cả\n            </Text>\n          </Box>\n          <Heading p={2} size=\"lg\">\n            Sự kiện\n          </Heading>\n          <Box gap=\"4\" sx={{ display: 'flex' }}>\n            {cardEvents.map((cardEvent) => (\n              <AppCardEvent\n                key={cardEvent.title}\n                title={cardEvent.title}\n                linkImage={cardEvent.linkImage}\n                status={cardEvent.status}\n                time={cardEvent.time}\n                location={cardEvent.location}\n                linkDetail={cardEvent.linkDetail}\n              />\n            ))}\n          </Box>\n          <Box sx={{ textAlign: 'right', mt: '.5rem' }}>\n            <Text as={Link} to=\"/\">\n              Xem tất cả\n            </Text>\n          </Box>\n          <Heading p={2} size=\"lg\">\n            Công việc\n          </Heading>\n          <Box>\n            <AppTable hasHeader={false} caption=\"\" dataSource={dataSource} columns={columns} />\n          </Box>\n        </Box>\n        <Box p={3} rounded=\"md\" shadow=\"md\" borderWidth=\"1px\" maxW=\"320px\">\n          <AppCalendar caption=\"Lịch\" />\n          <AppReminder caption=\"Lời nhắc\" data={reminders} />\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","import Home from './Home';\n\nexport default Home;\n"],"names":["AppTable","dataSource","columns","caption","hasHeader","AppRow","React","cols","data","Tr","map","col","Td","render","dataIndex","key","id","p","rounded","shadow","borderWidth","variant","Th","scope","title","AppTagEvent","number","status","sx","display","flex","flexDir","gap","fontSize","AppCardEvent","linkImage","time","location","linkDetail","linkTextColor","useColorModeValue","theme","position","maxHeight","maxWidth","width","height","objectFit","src","size","colorScheme","alignItems","icon","style","textAlign","as","Link","color","to","AppCalendar","useState","value","setValue","MantineProvider","maxW","onChange","fullWidth","ReminderItem","endTime","endAt","Date","m","borderLeft","boxShadow","toLocaleString","timeZone","AppReminder","marginTop","mt","overflowY","css","background","borderRadius","item","tableData","desc","content","link","completedJob","totalJob","checked","tagData","cardData","reminders","UTC","justifyContent","isChecked","mockData","tagEvents","cardEvents","tagEvent","cardEvent"],"sourceRoot":""}