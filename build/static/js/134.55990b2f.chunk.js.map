{"version":3,"file":"static/js/134.55990b2f.chunk.js","mappings":"oZAmBMA,GAAYC,EAAAA,EAAAA,IAAO,MAAO,CAC9BC,UAAW,CACTC,MAAO,OACPC,OAAQ,UAIZ,SAASC,EAAc,GAA6B,IAA3BC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KACnCC,GAAWC,EAAAA,EAAAA,IAAgBJ,GAC3BK,GAAQC,EAAAA,EAAAA,IAAS,CAAEN,KAAMG,EAASI,SAAUC,KAAK,IAEvD,OACE,SAAC,KAAQ,CACPC,GAAI,CACFC,eAAgB,SAChBC,GAAI,IACJC,EAAG,EACHC,aAAc,GACd,UAEF,UAAC,KAAM,CAACC,GAAIC,EAAAA,GAASC,GAAIhB,EAAMiB,EAAE,OAAOC,QAAQ,QAAQC,YAAad,GAAS,SAAS,WACrF,SAAC,IAAe,CAACJ,KAAMA,EAAMmB,MAAM,YAClClB,IAAQ,SAAC,KAAI,CAACmB,GAAI,EAAE,SAAEtB,QAI/B,CAEA,SAASuB,EAAe,GAA+D,IAA7DpB,EAAI,EAAJA,KAAaqB,GAAF,EAALC,MAAgB,EAATD,WAAWE,EAAK,EAALA,MAAOC,EAAgB,EAAhBA,iBAAqBC,GAAI,YAC1EC,GAAUC,EAAAA,EAAAA,IAAkB,WAAY,YAE9C,OACE,UAAC,MAAG,gBACFf,GAAG,QACHgB,cAAc,SACdC,WAAW,UACXC,GAAIJ,EACJK,EAAE,QAEEN,GAAI,eAER,UAAC,KAAG,CAAChB,GAAI,EAAGuB,GAAI,EAAGC,QAAQ,OAAOL,cAAc,MAAMpB,eAAe,gBAAe,WAClF,SAAC,KAAM,CAAC0B,KAAK,SAASC,QAASX,EAAkBT,EAAE,OAAOqB,KAAM,GAAG,UACjE,SAAC,IAAe,CAACrC,KAAMC,EAAI,eAG7B,SAAC,KAAG,CAACiC,QAAS,CAAEI,KAAM,OAAQC,GAAI,QAAUC,WAAW,SAAQ,UAC7D,SAAChD,EAAS,CAACiD,IAAKnB,EAAWoB,IAAI,eAInC,SAAC,KAAI,UACFlB,EAAMmB,KAAI,SAACC,GAAI,OACd,SAAC/C,EAAa,CAEZI,KAAMA,EACNH,KAAM8C,EAAKrB,MACXxB,KAAM6C,EAAK7C,KACXC,KAAM4C,EAAK5C,MAJN4C,EAAKrB,MAKV,SAKZ,CAEe,SAASsB,EAAW,GAAuC,IAArCtB,EAAK,EAALA,MAAOD,EAAS,EAATA,UAAWE,EAAK,EAALA,MAAUE,GAAI,YAC7DoB,GAAWC,EAAAA,EAAAA,MAETC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,GAAG,IAAhDH,YAEFvB,EAAmB,WACvBqB,GAASM,EAAAA,EAAAA,KACX,EAEMC,GAAaC,EAAAA,EAAAA,IAAmB,CAAEhB,KAAM,OAAQC,GAAI,OAE1D,OACE,iCACE,SAAClB,GAAc,QACbE,MAAOA,EACPD,UAAWA,EACXE,MAAOA,EACPvB,KAAM+C,EACNvB,iBAAkBA,EAClBS,QAAS,CAAEI,KAAM,OAAQC,GAAI,SAC7BvB,EAAG,IAECU,KAEN,SAAC,KAAM,CACL6B,WAAW,EACXC,OAAQR,EACRS,UAAU,OACVC,QAASjC,EACTkC,oBAAoB,EACpBC,eAAgBnC,EAChBoC,KAAMR,EAAW,UAEjB,SAAC,KAAa,WACZ,SAAChC,EAAc,CACbE,MAAOA,EACPD,UAAWA,EACXE,MAAOA,EACPvB,KAAM+C,EACNvB,iBAAkBA,EAClBT,EAAE,eAMd,C,uBCjIA,IAAI8C,EAASC,EAAQ,MACrBC,EAAQ,GAAa,CACnBC,OAAQH,EAAOG,OACfC,SAAUJ,EAAOI,SACjBlE,KAAM,CACJ8D,EAAOnE,MACPmE,EAAOlE,OACPkE,EAAOK,QACPL,EAAOM,QACPN,EAAOO,cAGXL,EAAQ,GAAUA,EAAQ,GACTF,EAAOG,OACLH,EAAOI,SACVJ,EAAOnE,MACNmE,EAAOlE,OACJkE,EAAOK,QACTL,EAAOM,QACHN,EAAOO,YACXP,EAAOK,O,qBCrBzBG,OAAOC,eAAeP,EAAS,aAA/BM,CAA+CE,OAAO,IACtD,IACIN,EAAW,QAGXC,EAAU,CAAC,OAAO,MAAM,MAAM,MAAM,IAAI,QAAQ,WAAW,SAAS,SACpEC,EAAU,OACVC,EAAc,yRAElBL,EAAQS,WAAa,CACnBR,OATW,MAUXC,SAAUA,EACVlE,KAAM,CATI,IACC,IAWTmE,EACAC,EACAC,IAGJL,EAAQU,QAAUV,EAAQS,WAC1BT,EAAQC,OApBK,MAqBbD,EAAQE,SAAWA,EACnBF,EAAQrE,MApBI,IAqBZqE,EAAQpE,OApBK,IAqBboE,EAAQW,UAAYR,EACpBH,EAAQI,QAAUA,EAClBJ,EAAQK,YAAcA,EACtBL,EAAQG,QAAUA,C","sources":["layout/AppSidebar.jsx","../node_modules/@fortawesome/free-solid-svg-icons/faTimes.js","../node_modules/@fortawesome/free-solid-svg-icons/faXmark.js"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Button,\n  Text,\n  chakra,\n  List,\n  ListItem,\n  useColorModeValue,\n  DrawerContent,\n  Drawer,\n  useBreakpointValue,\n} from '@chakra-ui/react';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleSidebar } from 'app/appSlice';\n\nconst BrandIcon = chakra('img', {\n  baseStyle: {\n    width: '2rem',\n    height: 'auto',\n  },\n});\n\nfunction CustomNavLink({ name, path, icon, open }) {\n  const resolved = useResolvedPath(path);\n  const match = useMatch({ path: resolved.pathname, end: true });\n\n  return (\n    <ListItem\n      sx={{\n        justifyContent: 'center',\n        px: 2.5,\n        m: 1,\n        borderRadius: 2,\n      }}\n    >\n      <Button as={NavLink} to={path} w=\"full\" variant=\"solid\" colorScheme={match && 'yellow'}>\n        <FontAwesomeIcon icon={icon} color=\"inherit\" />\n        {open && <Text ml={1}>{name}</Text>}\n      </Button>\n    </ListItem>\n  );\n}\n\nfunction SidebarContent({ open, title, brandIcon, items, toggleVisibility, ...rest }) {\n  const bgColor = useColorModeValue('gray.200', 'gray.900');\n\n  return (\n    <Box\n      as=\"aside\"\n      flexDirection=\"column\"\n      transition=\"2s ease\"\n      bg={bgColor}\n      h=\"full\"\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n    >\n      <Box px={3} my={3} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n        <Button type=\"button\" onClick={toggleVisibility} w=\"full\" maxW={20}>\n          <FontAwesomeIcon icon={open ? solid('times') : solid('bars')} />\n        </Button>\n\n        <Box display={{ base: 'flex', md: 'none' }} alignItems=\"center\">\n          <BrandIcon src={brandIcon} alt=\"logo\" />\n        </Box>\n      </Box>\n\n      <List>\n        {items.map((item) => (\n          <CustomNavLink\n            key={item.title}\n            open={open}\n            name={item.title}\n            path={item.path}\n            icon={item.icon}\n          />\n        ))}\n      </List>\n    </Box>\n  );\n}\n\nexport default function AppSidebar({ title, brandIcon, items, ...rest }) {\n  const dispatch = useDispatch();\n\n  const { openSidebar } = useSelector((state) => state.app);\n\n  const toggleVisibility = () => {\n    dispatch(toggleSidebar());\n  };\n\n  const drawerSize = useBreakpointValue({ base: 'full', md: 'xs' });\n\n  return (\n    <>\n      <SidebarContent\n        title={title}\n        brandIcon={brandIcon}\n        items={items}\n        open={openSidebar}\n        toggleVisibility={toggleVisibility}\n        display={{ base: 'none', md: 'block' }}\n        w={20}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...rest}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={openSidebar}\n        placement=\"left\"\n        onClose={toggleVisibility}\n        returnFocusOnClose={false}\n        onOverlayClick={toggleVisibility}\n        size={drawerSize}\n      >\n        <DrawerContent>\n          <SidebarContent\n            title={title}\n            brandIcon={brandIcon}\n            items={items}\n            open={openSidebar}\n            toggleVisibility={toggleVisibility}\n            w=\"full\"\n          />\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar source = require('./faXmark');\nexports.definition = {\n  prefix: source.prefix,\n  iconName: source.iconName,\n  icon: [\n    source.width,\n    source.height,\n    source.aliases,\n    source.unicode,\n    source.svgPathData\n  ]};\n\nexports.faTimes = exports.definition;\nexports.prefix = source.prefix;\nexports.iconName = source.iconName;\nexports.width = source.width;\nexports.height = source.height;\nexports.ligatures = source.aliases;\nexports.unicode = source.unicode;\nexports.svgPathData = source.svgPathData;\nexports.aliases = source.aliases;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'xmark';\nvar width = 320;\nvar height = 512;\nvar aliases = [128473,10005,10006,10060,215,\"close\",\"multiply\",\"remove\",\"times\"];\nvar unicode = 'f00d';\nvar svgPathData = 'M310.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L160 210.7 54.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L114.7 256 9.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 301.3 265.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L205.3 256 310.6 150.6z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    aliases,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faXmark = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = aliases;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;\nexports.aliases = aliases;"],"names":["BrandIcon","chakra","baseStyle","width","height","CustomNavLink","name","path","icon","open","resolved","useResolvedPath","match","useMatch","pathname","end","sx","justifyContent","px","m","borderRadius","as","NavLink","to","w","variant","colorScheme","color","ml","SidebarContent","brandIcon","title","items","toggleVisibility","rest","bgColor","useColorModeValue","flexDirection","transition","bg","h","my","display","type","onClick","maxW","base","md","alignItems","src","alt","map","item","AppSidebar","dispatch","useDispatch","openSidebar","useSelector","state","app","toggleSidebar","drawerSize","useBreakpointValue","autoFocus","isOpen","placement","onClose","returnFocusOnClose","onOverlayClick","size","source","require","exports","prefix","iconName","aliases","unicode","svgPathData","Object","defineProperty","value","definition","faXmark","ligatures"],"sourceRoot":""}