{"version":3,"file":"static/js/351.41eb9b17.chunk.js","mappings":"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","sources":["components/ValidatedCheck.jsx","auth/SignIn.jsx","components/ValidatedInput.jsx"],"sourcesContent":["import React from 'react';\nimport { Checkbox, FormControl, FormErrorMessage } from '@chakra-ui/react';\nimport { Controller } from 'react-hook-form';\n\n/**\n * ValidatedCheck is a wrapper around FormControl that adds validation\n *\n * @param {Object} props with the following properties:\n * - control: the control object from react-hook-form\n * - name: the name of the input\n * - label: the label of the input\n * - rules: the rules for the input\n * @see https://react-hook-form.com/api/useform/register\n * @returns the Checkbox with validation\n */\nexport default function ValidatedCheck({ control, name, label, rules }) {\n  return (\n    <Controller\n      name={name}\n      rules={rules}\n      control={control}\n      render={({ field: { onChange, onBlur, value, ref }, fieldState: { error } }) => (\n        <FormControl isInvalid={!!error}>\n          <Checkbox isChecked={!!value} value={value} onChange={onChange} onBlur={onBlur} ref={ref}>\n            {label}\n          </Checkbox>\n          {error && <FormErrorMessage>{error?.message}</FormErrorMessage>}\n        </FormControl>\n      )}\n    />\n  );\n}\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport ValidatedInput from 'components/ValidatedInput';\r\nimport ValidatedCheck from 'components/ValidatedCheck';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Image,\r\n  Link,\r\n  Progress,\r\n  ScaleFade,\r\n  Text,\r\n} from '@chakra-ui/react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { regular } from '@fortawesome/fontawesome-svg-core/import.macro';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { signin } from './authSlice';\r\n\r\nconst formRules = {\r\n  username: {\r\n    required: 'Bắt buộc nhập',\r\n  },\r\n  password: {\r\n    required: 'Bắt buộc nhập',\r\n  },\r\n};\r\n\r\nexport default function SignIn() {\r\n  const dispatch = useDispatch();\r\n  const { loading, errorMessage } = useSelector((state) => state.auth);\r\n\r\n  const { control, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      username: '',\r\n      password: '',\r\n      rememberMe: false,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(signin(values));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      position=\"absolute\"\r\n      left=\"50%\"\r\n      top=\"40%\"\r\n      transform=\"translate(-50%, -50%)\"\r\n      borderRadius=\"xl\"\r\n      overflow=\"hidden\"\r\n      shadow=\"lg\"\r\n    >\r\n      <ScaleFade initialScale={0.9} in>\r\n        <Flex height=\"max-content\">\r\n          <Box>\r\n            <Image\r\n              display={{ xl: 'block', base: 'none' }}\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              objectFit=\"cover\"\r\n              src=\"https://arena.fpt.edu.vn/wp-content/uploads/2021/04/mau-sac-trong-flat-design.png\"\r\n              alt=\"\"\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              boxShadow: 'md',\r\n              width: 500,\r\n              p: 4,\r\n            }}\r\n          >\r\n            <Flex fontSize=\"2xl\" fontWeight=\"bold\" mb={4} gap={2} alignItems=\"center\">\r\n              <Avatar\r\n                bg=\"teal.500\"\r\n                color=\"white\"\r\n                icon={<FontAwesomeIcon icon={regular('user')} />}\r\n              />\r\n              <Text>Đăng nhập</Text>\r\n            </Flex>\r\n            {loading && <Progress w=\"100%\" size=\"sm\" colorScheme=\"green\" isIndeterminate />}\r\n            {errorMessage && (\r\n              <Alert status=\"error\">\r\n                <AlertIcon />\r\n                <AlertTitle>Đăng nhập thất bại</AlertTitle>\r\n                <AlertDescription>{errorMessage}</AlertDescription>\r\n              </Alert>\r\n            )}\r\n            <Box\r\n              as=\"form\"\r\n              noValidate\r\n              sx={{ width: '100%', display: 'flex', flexDirection: 'column', gap: '.5rem' }}\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <ValidatedInput\r\n                control={control}\r\n                name=\"username\"\r\n                type=\"text\"\r\n                label=\"Tên tài khoản\"\r\n                rules={formRules.username}\r\n              />\r\n\r\n              <ValidatedInput\r\n                control={control}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Mật khẩu\"\r\n                rules={formRules.password}\r\n              />\r\n\r\n              <ValidatedCheck control={control} name=\"rememberMe\" label=\"Ghi nhớ tài khoản\" />\r\n\r\n              <Button type=\"submit\" width=\"100%\">\r\n                Gửi\r\n              </Button>\r\n              <Text color=\"gray.500\">\r\n                Bạn chưa có tài khoản?&nbsp;\r\n                <Link as={NavLink} to=\"/auth/signup\" fontWeight=\"bold\" color=\"teal.400\">\r\n                  Tạo tài khoản\r\n                </Link>\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n        </Flex>\r\n      </ScaleFade>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\nimport { FormControl, FormErrorMessage, FormLabel, Input, Textarea } from '@chakra-ui/react';\nimport { Controller } from 'react-hook-form';\n\nfunction InputComponent({ type, onChange, onBlur, value, innerRef }) {\n  switch (type) {\n    case 'textarea':\n      return <Textarea onChange={onChange} onBlur={onBlur} value={value} ref={innerRef} />;\n    default:\n      return <Input type={type} onChange={onChange} onBlur={onBlur} value={value} ref={innerRef} />;\n  }\n}\n\n/**\n * ValidatedInput is a wrapper around Input that adds validation\n *\n * @param {Object} props with the following properties:\n * - control: the control object from react-hook-form\n * - name: the name of the input\n * - type: the type of the input\n * - label: the label of the input\n * - rules: the rules for the input\n * @see https://react-hook-form.com/api/useform/register\n * @returns the Input with validation\n */\nexport default function ValidatedInput({ control, name, type, label, rules, sx }) {\n  return (\n    <Controller\n      name={name}\n      rules={rules}\n      control={control}\n      render={({ field: { onChange, onBlur, value, ref }, fieldState: { error } }) => (\n        <FormControl sx={sx} isInvalid={!!error}>\n          <FormLabel>{label}</FormLabel>\n          <InputComponent\n            type={type}\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n            innerRef={ref}\n          />\n          {error && <FormErrorMessage>{error?.message}</FormErrorMessage>}\n        </FormControl>\n      )}\n    />\n  );\n}\n"],"names":["ValidatedCheck","control","name","label","rules","render","field","onChange","onBlur","value","ref","error","fieldState","isInvalid","isChecked","message","formRules","username","required","password","SignIn","dispatch","useDispatch","useSelector","state","auth","loading","errorMessage","useForm","defaultValues","rememberMe","handleSubmit","position","left","top","transform","borderRadius","overflow","shadow","initialScale","in","height","display","xl","base","width","objectFit","src","alt","sx","flexDirection","alignItems","boxShadow","p","fontSize","fontWeight","mb","gap","bg","color","icon","w","size","colorScheme","isIndeterminate","status","as","noValidate","onSubmit","values","signin","ValidatedInput","type","NavLink","to","InputComponent","innerRef"],"sourceRoot":""}