{"version":3,"file":"static/js/473.29dd0e45.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/visually-hidden/dist/index.esm.js","../node_modules/@zag-js/focus-visible/src/index.ts","../node_modules/@chakra-ui/checkbox/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/visually-hidden.tsx\nimport { chakra } from \"@chakra-ui/system\";\n\n// src/visually-hidden.style.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n\n// src/visually-hidden.tsx\nvar VisuallyHidden = chakra(\"span\", {\n  baseStyle: visuallyHiddenStyle\n});\nVisuallyHidden.displayName = \"VisuallyHidden\";\nvar VisuallyHiddenInput = chakra(\"input\", {\n  baseStyle: visuallyHiddenStyle\n});\nVisuallyHiddenInput.displayName = \"VisuallyHiddenInput\";\nvar visually_hidden_default = VisuallyHidden;\nexport {\n  VisuallyHidden,\n  VisuallyHiddenInput,\n  visually_hidden_default as default,\n  visuallyHiddenStyle\n};\n","type Modality = \"keyboard\" | \"pointer\"\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent\ntype Handler = (modality: Modality, e: HandlerEvent) => void\ntype FocusVisibleCallback = (isFocusVisible: boolean) => void\n\nlet hasSetup = false\nlet modality: Modality | null = null\nlet hasEventBeforeFocus = false\n\nconst handlers = new Set<Handler>()\n\nconst isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false\n\nfunction isValidKey(event: KeyboardEvent) {\n  return !(event.metaKey || (!isMac && event.altKey) || event.ctrlKey)\n}\n\nfunction trigger(modality: Modality, event: HandlerEvent) {\n  handlers.forEach((handler) => handler(modality, event))\n}\n\nfunction onKeyboardEvent(event: KeyboardEvent) {\n  hasEventBeforeFocus = true\n  if (isValidKey(event)) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n}\n\nfunction onPointerEvent(event: PointerEvent | MouseEvent) {\n  modality = \"pointer\"\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true\n    trigger(\"pointer\", event)\n  }\n}\n\nfunction onWindowFocus(event: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (event.target === window || event.target === document) {\n    return\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n\n  hasEventBeforeFocus = false\n}\n\nfunction onWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\"\n}\n\nfunction setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || hasSetup) {\n    return\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  const { focus } = HTMLElement.prototype\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true\n    focus.apply(this, args)\n  }\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true)\n  document.addEventListener(\"keyup\", onKeyboardEvent, true)\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener(\"focus\", onWindowFocus, true)\n  window.addEventListener(\"blur\", onWindowBlur, false)\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true)\n    document.addEventListener(\"pointermove\", onPointerEvent, true)\n    document.addEventListener(\"pointerup\", onPointerEvent, true)\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true)\n    document.addEventListener(\"mousemove\", onPointerEvent, true)\n    document.addEventListener(\"mouseup\", onPointerEvent, true)\n  }\n\n  hasSetup = true\n}\n\nexport function trackFocusVisible(fn: FocusVisibleCallback) {\n  setupGlobalFocusEvents()\n\n  fn(isFocusVisible())\n  const handler = () => fn(isFocusVisible())\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/checkbox-group.tsx\nimport { useMemo } from \"react\";\n\n// src/checkbox-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\n// src/use-checkbox-group.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction callAll(...fns) {\n  return function mergedFn(arg) {\n    fns.forEach((fn) => {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\n\n// src/use-checkbox-group.ts\nimport { useCallback } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback((eventOrValue) => {\n    if (!value)\n      return;\n    const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\n    setValue(nextValue);\n  }, [setValue, value]);\n  const getCheckboxProps = useCallback((props2 = {}) => {\n    const checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return {\n      ...props2,\n      [checkedKey]: value.some((val) => String(props2.value) === String(val)),\n      onChange: handleChange\n    };\n  }, [handleChange, isNative, value]);\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\n// src/checkbox-group.tsx\nfunction CheckboxGroup(props) {\n  const { colorScheme, size, variant, children, isDisabled } = props;\n  const { value, onChange } = useCheckboxGroup(props);\n  const group = useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */ React.createElement(CheckboxGroupProvider, {\n    value: group,\n    children\n  });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\n// src/checkbox-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ React.createElement(chakra.svg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ React.createElement(chakra.svg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    style: { stroke: \"currentColor\", strokeWidth: 4 },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ React.createElement(chakra.div, {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, /* @__PURE__ */ React.createElement(BaseIcon, {\n    ...rest\n  })) : null;\n}\n\n// src/checkbox.tsx\nimport {\n  chakra as chakra2,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cloneElement, useMemo as useMemo2 } from \"react\";\n\n// src/use-checkbox.ts\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallbackRef as useCallbackRef2 } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-checkbox.ts\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback as useCallback2, useEffect, useRef, useState } from \"react\";\nfunction useCheckbox(props = {}) {\n  const formControlProps = useFormControlProps(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\"\n  ]);\n  const onChangeProp = useCallbackRef2(onChange);\n  const onBlurProp = useCallbackRef2(onBlur);\n  const onFocusProp = useCallbackRef2(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovered] = useState(false);\n  const [isActive, setActive] = useState(false);\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const inputRef = useRef(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  const [checkedState, setCheckedState] = useState(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = useCallback2((event) => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [\n    isReadOnly,\n    isDisabled,\n    isChecked,\n    isControlled,\n    isIndeterminate,\n    onChangeProp\n  ]);\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form))\n      return;\n    el.form.onreset = () => {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(true);\n    }\n  }, [setActive]);\n  const onKeyUp = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(false);\n    }\n  }, [setActive]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.checked !== isChecked;\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    const onPressDown = (event) => {\n      if (isFocused) {\n        event.preventDefault();\n      }\n      setActive(true);\n    };\n    return {\n      ...props2,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(props2.onMouseEnter, () => setHovered(true)),\n      onMouseLeave: callAllHandlers(props2.onMouseLeave, () => setHovered(false))\n    };\n  }, [\n    isActive,\n    isChecked,\n    isDisabled,\n    isFocused,\n    isFocusVisible,\n    isHovered,\n    isIndeterminate,\n    isInvalid,\n    isReadOnly\n  ]);\n  const getRootProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...htmlProps,\n    ...props2,\n    ref: mergeRefs(forwardedRef, (node) => {\n      if (!node)\n        return;\n      setRootIsLabelElement(node.tagName === \"LABEL\");\n    }),\n    onClick: callAllHandlers(props2.onClick, () => {\n      var _a;\n      if (!rootIsLabelElement) {\n        (_a = inputRef.current) == null ? void 0 : _a.click();\n        requestAnimationFrame(() => {\n          var _a2;\n          (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n        });\n      }\n    }),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  const getInputProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    return {\n      ...props2,\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      tabIndex,\n      onChange: callAllHandlers(props2.onChange, handleChange),\n      onBlur: callAllHandlers(props2.onBlur, onBlurProp, () => setFocused(false)),\n      onFocus: callAllHandlers(props2.onFocus, onFocusProp, () => setFocused(true)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    };\n  }, [\n    name,\n    value,\n    id,\n    handleChange,\n    onBlurProp,\n    onFocusProp,\n    onKeyDown,\n    onKeyUp,\n    isRequired,\n    isChecked,\n    trulyDisabled,\n    isReadOnly,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaInvalid,\n    isInvalid,\n    ariaDescribedBy,\n    isDisabled,\n    tabIndex\n  ]);\n  const getLabelProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...props2,\n    ref: forwardedRef,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    onTouchStart: callAllHandlers(props2.onTouchStart, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [isChecked, isDisabled, isInvalid]);\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// src/checkbox.tsx\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ React.createElement(CheckboxIcon, null),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo2(() => ({\n    animation: state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n    fontSize: iconSize,\n    color: iconColor,\n    ...styles.icon\n  }), [iconColor, iconSize, , state.isIndeterminate, styles.icon]);\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ React.createElement(chakra2.label, {\n    __css: { ...rootStyles, ...styles.container },\n    className: cx(\"chakra-checkbox\", className),\n    ...getRootProps()\n  }, /* @__PURE__ */ React.createElement(\"input\", {\n    className: \"chakra-checkbox__input\",\n    ...getInputProps(inputProps, ref)\n  }), /* @__PURE__ */ React.createElement(chakra2.span, {\n    __css: { ...controlStyles, ...styles.control },\n    className: \"chakra-checkbox__control\",\n    ...getCheckboxProps()\n  }, clonedIcon), children && /* @__PURE__ */ React.createElement(chakra2.span, {\n    className: \"chakra-checkbox__label\",\n    ...getLabelProps(),\n    __css: {\n      marginStart: spacing,\n      ...styles.label\n    }\n  }, children));\n});\nCheckbox.displayName = \"Checkbox\";\nexport {\n  Checkbox,\n  CheckboxGroup,\n  CheckboxIcon,\n  useCheckbox,\n  useCheckboxGroup\n};\n"],"names":["visuallyHiddenStyle","border","clip","height","width","margin","padding","overflow","whiteSpace","position","VisuallyHidden","chakra","baseStyle","displayName","hasSetup","modality","hasEventBeforeFocus","handlers","Set","isMac","window","navigator","test","platform","trigger","modality2","event","forEach","handler","onKeyboardEvent","metaKey","altKey","ctrlKey","isValidKey","onPointerEvent","type","onWindowFocus","target","document","onWindowBlur","isFocusVisible","trackFocusVisible","fn","focus","HTMLElement","prototype","args","apply","this","addEventListener","PointerEvent","setupGlobalFocusEvents","add","delete","createContext","name","strict","useCheckboxGroupContext","cx","classNames","filter","Boolean","join","dataAttr","condition","callAllHandlers","fns","some","defaultPrevented","CheckIcon","props","React","viewBox","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","isChecked","rest","BaseIcon","display","alignItems","justifyContent","omit","object","keysToOmit","clone","Object","assign","key","stopEvent","preventDefault","stopPropagation","controlStyles","verticalAlign","userSelect","flexShrink","rootStyles","cursor","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","forwardRef","ref","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","spacing","className","children","iconColor","iconSize","icon","isCheckedProp","isDisabled","onChangeProp","onChange","inputProps","value","includes","arg","callAll","formControlProps","useFormControlProps","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","useCallbackRef2","onBlurProp","onFocusProp","useState","setIsFocusVisible","isFocused","setFocused","isHovered","setHovered","isActive","setActive","useEffect","inputRef","useRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","isControlled","handleChange","useCallback2","checked","useSafeLayoutEffect","current","indeterminate","useUpdateEffect","el","form","onreset","trulyDisabled","onKeyDown","onKeyUp","getCheckboxProps","props2","forwardedRef","onPressDown","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","mergeRefs","node","tagName","onClick","_a","click","requestAnimationFrame","_a2","getInputProps","required","disabled","readOnly","getLabelProps","onTouchStart","state","useCheckbox","iconStyles","useMemo2","animation","fontSize","color","clonedIcon","cloneElement","__css","chakra2","container","control","marginStart","label"],"sourceRoot":""}