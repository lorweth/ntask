{"version":3,"file":"static/js/276.2d4de788.chunk.js","mappings":"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","sources":["components/ValidatedInput.jsx","event-mgmt/EventCard.jsx","event-mgmt/EventList.jsx","event-mgmt/CreateEvent.jsx","event-mgmt/TicketList.jsx","event-mgmt/Ticket.jsx","event-mgmt/EventDetail.jsx","event-mgmt/EditTask.jsx","event-mgmt/index.jsx"],"sourcesContent":["import React from 'react';\nimport { FormControl, FormErrorMessage, FormLabel, Input, Textarea } from '@chakra-ui/react';\nimport { Controller } from 'react-hook-form';\n\nfunction InputComponent({ type, onChange, onBlur, value, innerRef }) {\n  switch (type) {\n    case 'textarea':\n      return <Textarea onChange={onChange} onBlur={onBlur} value={value} ref={innerRef} />;\n    default:\n      return <Input type={type} onChange={onChange} onBlur={onBlur} value={value} ref={innerRef} />;\n  }\n}\n\n/**\n * ValidatedInput is a wrapper around Input that adds validation\n *\n * @param {Object} props with the following properties:\n * - control: the control object from react-hook-form\n * - name: the name of the input\n * - type: the type of the input\n * - label: the label of the input\n * - rules: the rules for the input\n * @see https://react-hook-form.com/api/useform/register\n * @returns the Input with validation\n */\nexport default function ValidatedInput({ control, name, type, label, rules, sx }) {\n  return (\n    <Controller\n      name={name}\n      rules={rules}\n      control={control}\n      render={({ field: { onChange, onBlur, value, ref }, fieldState: { error } }) => (\n        <FormControl sx={sx} isInvalid={!!error}>\n          <FormLabel>{label}</FormLabel>\n          <InputComponent\n            type={type}\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n            innerRef={ref}\n          />\n          {error && <FormErrorMessage>{error?.message}</FormErrorMessage>}\n        </FormControl>\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport { Avatar, AvatarGroup, Button, Flex, Image, Text } from '@chakra-ui/react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function EventCard({ eventID, name, imageURL, startAt, endAt, members }) {\n  const navigator = useNavigate();\n\n  const convertTime = (time) => {\n    const date = new Date(time);\n    return date.toLocaleString('vi-VN', { timeZone: 'Asia/Ho_Chi_Minh' });\n  };\n\n  const handleOnClickDetail = () => {\n    navigator(`/events/${eventID}`);\n  };\n\n  return (\n    <Flex flexDirection=\"column\" p={5} mb={4} shadow=\"md\" borderWidth=\"1px\" borderRadius=\"md\">\n      {imageURL && <Image src={imageURL} alt=\"\" />}\n      <Text fontWeight=\"500\" fontSize=\"md\">\n        {name}\n      </Text>\n      <Flex alignItems=\"center\" gap={2}>\n        <FontAwesomeIcon icon={solid('clock')} color=\"gray\" />\n        {convertTime(startAt)}\n      </Flex>\n      <Flex alignItems=\"center\" gap={2}>\n        <FontAwesomeIcon icon={solid('hourglass')} color=\"gray\" />\n        {convertTime(endAt)}\n      </Flex>\n      <Flex justifyContent=\"flex-end\">\n        {members && (\n          <AvatarGroup size=\"sm\" max={2}>\n            {members.map((member) => (\n              <Avatar key={member.login} size=\"sm\" name={member.login} src={member.avatarUrl} />\n            ))}\n          </AvatarGroup>\n        )}\n      </Flex>\n      <Flex justifyContent=\"flex-end\" mt={3}>\n        <Button colorScheme=\"green\" size=\"sm\" onClick={handleOnClickDetail}>\n          Chi tiết\n        </Button>\n      </Flex>\n    </Flex>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Box, Progress, Text, theme } from '@chakra-ui/react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { useSelector } from 'react-redux';\nimport EventCard from './EventCard';\nimport { EventStatuses } from './utils';\n\nexport default function EventList({ title, dropgableID, eventStatus }) {\n  const [events, setEvents] = useState([]);\n  const { loading, createdEvents, inprogressEvents, doneEvents } = useSelector(\n    (state) => state.eventMgmt\n  );\n\n  useEffect(() => {\n    if (eventStatus === EventStatuses.CREATED) {\n      setEvents(createdEvents);\n    } else if (eventStatus === EventStatuses.IN_PROGRESS) {\n      setEvents(inprogressEvents);\n    } else if (eventStatus === EventStatuses.DONE) {\n      setEvents(doneEvents);\n    }\n  }, [createdEvents, inprogressEvents, doneEvents, eventStatus]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        gap: '1rem',\n      }}\n    >\n      <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n        <Text fontSize=\"xl\" fontWeight=\"500\">\n          {title}\n        </Text>\n        <Text>{events?.length || 0}</Text>\n      </Box>\n      <Droppable droppableId={dropgableID}>\n        {(provided, snapshot) => (\n          <Box\n            as=\"div\"\n            ref={provided.innerRef}\n            bgColor={snapshot.isDraggingOver && theme.colors.gray[500]}\n          >\n            {loading && <Progress size=\"xs\" isIndeterminate />}\n            {events &&\n              events.map((event, index) => (\n                <Draggable draggableId={`draggable_${event.id}`} index={index} key={event.id}>\n                  {(providedDrag, snapshotDrag) => (\n                    <Box\n                      as=\"div\"\n                      ref={providedDrag.innerRef}\n                      // eslint-disable-next-line react/jsx-props-no-spreading\n                      {...providedDrag.draggableProps}\n                      // eslint-disable-next-line react/jsx-props-no-spreading\n                      {...providedDrag.dragHandleProps}\n                      bgColor={snapshotDrag.isDragging && theme.colors.gray[500]}\n                    >\n                      <EventCard\n                        eventID={event.id}\n                        name={event.name}\n                        imageURL={event.description}\n                        startAt={event.startAt}\n                        endAt={event.endAt}\n                        tags={event.tags}\n                        members={event.members}\n                      />\n                    </Box>\n                  )}\n                </Draggable>\n              ))}\n          </Box>\n        )}\n      </Droppable>\n    </Box>\n  );\n}\n","import React, { useRef } from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/react';\nimport { regular, solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ValidatedInput from 'components/ValidatedInput';\nimport { useForm } from 'react-hook-form';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport { useDispatch } from 'react-redux';\nimport { createEvent } from './eventMgmtSlice';\n\nexport default function CreateEvent() {\n  const dispatch = useDispatch();\n  const navigator = useNavigate();\n  const location = useLocation();\n  const { control, handleSubmit, watch } = useForm({\n    defaultValues: {\n      name: '',\n      description: '',\n      startAt: dayjs().format('YYYY-MM-DDTHH:mm'),\n      endAt: dayjs().format('YYYY-MM-DDTHH:mm'),\n    },\n  });\n  const startAtRef = useRef({});\n  startAtRef.current = watch('startAt', '');\n\n  const formRules = {\n    name: {\n      required: 'Name is required',\n    },\n    description: {\n      required: 'Description is required',\n    },\n    startAt: {\n      required: 'Start time is required',\n    },\n    endAt: {\n      required: 'End time is required',\n      validate: (value) =>\n        dayjs(value).isAfter(dayjs(startAtRef.current.value)) ||\n        'End time must be after start time',\n    },\n  };\n\n  const onSubmit = (values) => {\n    const startAt = dayjs(values.startAt).format('YYYY-MM-DDTHH:mm:ssZ');\n    const endAt = dayjs(values.endAt).format('YYYY-MM-DDTHH:mm:ssZ');\n\n    dispatch(createEvent({ ...values, startAt, endAt }));\n  };\n\n  const onClose = () => {\n    navigator(location.state?.backgroundLocation?.pathname || -1);\n  };\n\n  return (\n    <Modal isOpen onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalCloseButton />\n        <ModalHeader>\n          <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"teal.600\">\n            <Avatar\n              bg=\"teal.500\"\n              color=\"whiteAlpha.900\"\n              icon={<FontAwesomeIcon icon={regular('calendar-days')} />}\n            />\n            &nbsp;Tạo sự kiện mới\n          </Text>\n        </ModalHeader>\n        <ModalBody>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              gap: '0.5rem',\n              width: '700',\n              p: 2,\n            }}\n            as=\"form\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <ValidatedInput\n              control={control}\n              name=\"name\"\n              type=\"text\"\n              label=\"Tên sự kiện\"\n              rules={formRules.name}\n            />\n\n            <ValidatedInput\n              control={control}\n              name=\"description\"\n              type=\"textarea\"\n              label=\"Mô tả\"\n              rules={formRules.description}\n            />\n\n            <ValidatedInput\n              control={control}\n              name=\"startAt\"\n              type=\"datetime-local\"\n              label=\"Bắt đầu\"\n              rules={formRules.startAt}\n            />\n\n            <ValidatedInput\n              control={control}\n              name=\"endAt\"\n              type=\"datetime-local\"\n              label=\"Kết thúc\"\n              rules={formRules.endAt}\n            />\n\n            <Button type=\"submit\" width=\"100%\" mt={2}>\n              <FontAwesomeIcon icon={solid('floppy-disk')} />\n              &nbsp;Lưu\n            </Button>\n          </Box>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Alert, AlertIcon, Box, Text } from '@chakra-ui/react';\n\nexport default function TicketList({ title, data, onClickDetail, TicketComponent }) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        gap: '1rem',\n      }}\n    >\n      <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n        <Text fontSize=\"xl\" fontWeight=\"500\">\n          {title}\n        </Text>\n        <Text>{data?.length || 0}</Text>\n      </Box>\n      {data && data.length !== 0 ? (\n        <Box>\n          {data.map((d) => (\n            <TicketComponent key={d.id} onClickDetail={() => onClickDetail(d.id)} {...d} />\n          ))}\n        </Box>\n      ) : (\n        <Alert status=\"warning\">\n          <AlertIcon />\n          Không có ticket nào\n        </Alert>\n      )}\n    </Box>\n  );\n}\n","/* eslint-disable react/function-component-definition */\n/* eslint-disable consistent-return */\nimport React from 'react';\nimport { Avatar, AvatarGroup, Button, Flex, Text } from '@chakra-ui/react';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { convertTime } from './utils';\n\nexport const withTicket = (ticketType) => (props) => {\n  if (ticketType === 'event') {\n    const { name, startAt, endAt, members, onClickDetail } = props;\n    return (\n      <Ticket\n        name={name}\n        startAt={startAt}\n        endAt={endAt}\n        members={members}\n        onClickDetail={onClickDetail}\n      />\n    );\n  }\n  if (ticketType === 'task') {\n    const { name, startAt, endAt, assignees, onClickDetail } = props;\n    return (\n      <Ticket\n        name={name}\n        startAt={startAt}\n        endAt={endAt}\n        members={assignees}\n        onClickDetail={onClickDetail}\n      />\n    );\n  }\n};\n\nexport default function Ticket({ name, startAt, endAt, members, onClickDetail }) {\n  return (\n    <Flex\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        shadow: 'md',\n        borderWidth: '1px',\n        borderRadius: 'md',\n        mb: 4,\n        p: 4,\n      }}\n    >\n      <Text fontWeight=\"500\" fontSize=\"md\">\n        {name}\n      </Text>\n      <Flex alignItems=\"center\" gap={2}>\n        <FontAwesomeIcon icon={solid('clock')} color=\"gray\" />\n        {convertTime(startAt)}\n      </Flex>\n      <Flex alignItems=\"center\" gap={2}>\n        <FontAwesomeIcon icon={solid('hourglass')} color=\"gray\" />\n        {convertTime(endAt)}\n      </Flex>\n      <Flex justifyContent=\"flex-end\">\n        {members && (\n          <AvatarGroup size=\"sm\" max={2}>\n            {members.map((member) => (\n              <Avatar key={member.login} size=\"sm\" name={member.login} src={member.avatarUrl} />\n            ))}\n          </AvatarGroup>\n        )}\n      </Flex>\n      <Flex justifyContent=\"flex-end\" mt={3}>\n        <Button colorScheme=\"green\" size=\"sm\" onClick={onClickDetail}>\n          Chi tiết\n        </Button>\n      </Flex>\n    </Flex>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  Select,\n  Text,\n} from '@chakra-ui/react';\nimport { regular, solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ValidatedInput from 'components/ValidatedInput';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks, fetchUsers, getEvent, updateEvent } from './eventMgmtSlice';\nimport { EventStatuses } from './utils';\nimport TicketList from './TicketList';\nimport { withTicket } from './Ticket';\n\nexport default function EventDetail() {\n  const { eventID } = useParams();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const navigator = useNavigate();\n  const { selectedEvent, users, tasks, updateSuccess } = useSelector((state) => state.eventMgmt);\n  const { control, handleSubmit, watch, setValue } = useForm({\n    defaultValues: {\n      name: '',\n      description: '',\n      startAt: '',\n      endAt: '',\n      status: '',\n    },\n  });\n  const startAtRef = useRef({});\n  startAtRef.current = watch('startAt', '');\n  const userEmailRef = useRef({});\n  const [members, setMembers] = useState([]);\n  const TaskCard = withTicket('task');\n\n  const formRules = {\n    name: {\n      required: 'Name is required',\n    },\n    description: {\n      required: 'Description is required',\n    },\n    startAt: {\n      required: 'Start time is required',\n    },\n    endAt: {\n      required: 'End time is required',\n      validate: (value) =>\n        dayjs(value).isAfter(dayjs(startAtRef.current)) || 'End time must be after start time',\n    },\n    status: {\n      required: 'Status is required',\n    },\n  };\n\n  useEffect(() => {\n    dispatch(getEvent(eventID));\n    dispatch(fetchTasks({ eventID, page: 0, size: 100 }));\n  }, []);\n\n  useEffect(() => {\n    if (updateSuccess) {\n      dispatch(getEvent(eventID));\n      dispatch(fetchTasks({ eventID, page: 0, size: 100 }));\n    }\n  }, [updateSuccess]);\n\n  useEffect(() => {\n    if (selectedEvent) {\n      setValue('name', selectedEvent.name);\n      setValue('description', selectedEvent.description);\n      setValue('startAt', dayjs(selectedEvent.startAt).format('YYYY-MM-DDTHH:mm'));\n      setValue('endAt', dayjs(selectedEvent.endAt).format('YYYY-MM-DDTHH:mm'));\n      setValue('status', selectedEvent.status);\n      setMembers(selectedEvent.members);\n    }\n  }, [selectedEvent]);\n\n  const onSubmit = (values) => {\n    const startAt = dayjs(values.startAt).format('YYYY-MM-DDTHH:mm:ssZ');\n    const endAt = dayjs(values.endAt).format('YYYY-MM-DDTHH:mm:ssZ');\n\n    dispatch(updateEvent({ ...values, eventID, startAt, endAt, members }));\n  };\n\n  const onAddMember = (member) => {\n    setMembers([...members, member]);\n  };\n\n  const onRemoveMember = (member) => {\n    setMembers(members.filter((m) => m.id !== member.id));\n  };\n\n  const onFindUser = () => {\n    dispatch(fetchUsers({ q: userEmailRef.current.value, page: 0, size: 6 }));\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  const onBack = () => {\n    navigator(`/events`);\n  };\n\n  const onClickNewTask = () => {\n    navigator(`${location.pathname}/tasks/new`, { state: { backgroundLocation: location } });\n  };\n\n  const onClickTaskDetail = (taskID) => {\n    navigator(`${location.pathname}/tasks/${taskID}`, {\n      state: { backgroundLocation: location },\n    });\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '0.2rem',\n        width: '100%',\n      }}\n    >\n      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"teal.600\">\n          <Avatar\n            bg=\"teal.500\"\n            color=\"whiteAlpha.900\"\n            icon={<FontAwesomeIcon icon={regular('calendar-plus')} />}\n          />\n          &nbsp;Chi tiết sự kiện\n        </Text>\n        <Button colorScheme=\"telegram\" variant=\"outline\" onClick={onBack}>\n          <FontAwesomeIcon icon={solid('arrow-left')} />\n        </Button>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'row',\n          gap: '0.5rem',\n        }}\n      >\n        {/* Update event form */}\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            flex: 2,\n            gap: '0.5rem',\n            p: 2,\n          }}\n          as=\"form\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <Box sx={{ display: 'flex', flexDirection: 'row', gap: '1rem' }}>\n            <ValidatedInput\n              sx={{ flex: 2 }}\n              control={control}\n              name=\"name\"\n              type=\"text\"\n              label=\"Tên sự kiện\"\n              rules={formRules.name}\n            />\n            <Controller\n              name=\"status\"\n              rules={formRules.status}\n              control={control}\n              render={({ field: { onChange, onBlur, value, ref }, fieldState: { error } }) => (\n                <FormControl sx={{ flex: 1 }} isInvalid={!!error}>\n                  <FormLabel>Trạng thái</FormLabel>\n                  <Select onChange={onChange} onBlur={onBlur} value={value} ref={ref}>\n                    <option value={EventStatuses.CREATED}>{EventStatuses.CREATED}</option>\n                    <option value={EventStatuses.IN_PROGRESS}>{EventStatuses.IN_PROGRESS}</option>\n                    <option value={EventStatuses.DONE}>{EventStatuses.DONE}</option>\n                  </Select>\n                  {error && <FormErrorMessage>{error?.message}</FormErrorMessage>}\n                </FormControl>\n              )}\n            />\n          </Box>\n\n          <ValidatedInput\n            control={control}\n            name=\"description\"\n            type=\"textarea\"\n            label=\"Mô tả\"\n            rules={formRules.description}\n          />\n\n          <Box sx={{ display: 'flex', flexDirection: 'row', gap: '1rem' }}>\n            <ValidatedInput\n              sx={{ flex: 1 }}\n              control={control}\n              name=\"startAt\"\n              type=\"datetime-local\"\n              label=\"Bắt đầu\"\n              rules={formRules.startAt}\n            />\n\n            <ValidatedInput\n              sx={{ flex: 1 }}\n              control={control}\n              name=\"endAt\"\n              type=\"datetime-local\"\n              label=\"Kết thúc\"\n              rules={formRules.endAt}\n            />\n          </Box>\n\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              gap: '1rem',\n            }}\n          >\n            <Box\n              direction=\"row\"\n              sx={{\n                flexWrap: 'wrap',\n                justifyContent: 'flex-start',\n                span: { width: '1.5rem', height: '1.5rem', m: 1, div: { fontSize: '9pt' } },\n              }}\n            >\n              {members?.map((member) => (\n                <Box\n                  cursor=\"pointer\"\n                  display=\"inline-block\"\n                  key={`member-${member.id}`}\n                  onClick={() => onRemoveMember(member)}\n                >\n                  <Avatar name={member.name} src={member.avatarUrl} />\n                </Box>\n              ))}\n            </Box>\n\n            <Button type=\"submit\" variant=\"outline\" colorScheme=\"facebook\">\n              <FontAwesomeIcon icon={solid('floppy-disk')} />\n              &nbsp;Lưu\n            </Button>\n          </Box>\n        </Box>\n\n        {/* Add member form */}\n        <Box\n          sx={{\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n            gap: '0.5rem',\n            p: 2,\n            width: 'max-content',\n          }}\n        >\n          <Box>\n            <FormLabel>Tìm kiếm người dùng</FormLabel>\n            <Box as=\"div\" sx={{ display: 'flex', flexDirection: 'row', gap: '0.3rem' }}>\n              <Input ref={userEmailRef} placeholder=\"Nhập email\" />\n              <Button colorScheme=\"teal\" onClick={onFindUser}>\n                <FontAwesomeIcon icon={solid('magnifying-glass')} />\n              </Button>\n            </Box>\n          </Box>\n          {users.length > 0 && (\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '0.3rem',\n                width: '100%',\n                alignItems: 'start',\n              }}\n            >\n              {users.map((user) => (\n                <Button\n                  key={JSON.stringify(user)}\n                  variant=\"ghost\"\n                  onClick={() => onAddMember(user)}\n                >\n                  <Avatar\n                    key={`user-${user.id}`}\n                    name={user.login}\n                    src={user.avatarUrl}\n                    size=\"sm\"\n                    bg=\"teal.500\"\n                    color=\"whiteAlpha.900\"\n                  />\n                  &nbsp;{user.login}\n                </Button>\n              ))}\n            </Box>\n          )}\n        </Box>\n      </Box>\n      <Divider />\n      {/* Task Bar */}\n      <Box sx={{ display: 'flex', flexDirection: 'row', gap: '0.2rem', mt: 3 }}>\n        <Box sx={{ display: 'flex', flexDir: 'row', flex: 1 }} as=\"form\" noValidate>\n          <Input placeholder=\"Tìm kiếm...\" />\n          <Button type=\"submit\">\n            <FontAwesomeIcon icon={solid('magnifying-glass')} />\n          </Button>\n        </Box>\n        <Button colorScheme=\"green\" onClick={onClickNewTask}>\n          <FontAwesomeIcon icon={solid('plus')} />\n          &nbsp;\n          <Text\n            display={{\n              base: 'none',\n              md: 'inline',\n            }}\n          >\n            Thêm task\n          </Text>\n        </Button>\n      </Box>\n\n      {/* Task List */}\n      <Box sx={{ display: 'flex', flexDirection: 'row', gap: '1rem' }}>\n        <TicketList\n          title=\"Sắp diễn ra\"\n          data={tasks?.filter((task) => task.status === EventStatuses.CREATED) || []}\n          onClickDetail={onClickTaskDetail}\n          TicketComponent={TaskCard}\n        />\n        <TicketList\n          title=\"Đang diễn ra\"\n          data={tasks?.filter((task) => task.status === EventStatuses.IN_PROGRESS) || []}\n          onClickDetail={onClickTaskDetail}\n          TicketComponent={TaskCard}\n        />\n        <TicketList\n          title=\"Đã kết thúc\"\n          data={tasks?.filter((task) => task.status === EventStatuses.DONE) || []}\n          onClickDetail={onClickTaskDetail}\n          TicketComponent={TaskCard}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Select,\n  Text,\n} from '@chakra-ui/react';\nimport { regular, solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ValidatedInput from 'components/ValidatedInput';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createTask, getTask, updateTask } from './eventMgmtSlice';\nimport { EventStatuses } from './utils';\n\nexport default function EditTask() {\n  const { eventID, taskID } = useParams();\n  const isNew = taskID === undefined || taskID === null;\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const navigator = useNavigate();\n  const { selectedTask, selectedEvent } = useSelector((state) => state.eventMgmt);\n  const { control, handleSubmit, watch, setValue } = useForm({\n    defaultValues: {\n      name: '',\n      description: '',\n      startAt: dayjs().format('YYYY-MM-DDTHH:mm'),\n      endAt: dayjs().add(1, 'hour').format('YYYY-MM-DDTHH:mm'),\n      status: EventStatuses.CREATED,\n    },\n  });\n  const startAtRef = useRef({});\n  startAtRef.current = watch('startAt', '');\n  const [assignees, setAssignees] = useState([]);\n\n  const formRules = {\n    name: {\n      required: 'Name is required',\n    },\n    description: {\n      required: 'Description is required',\n    },\n    startAt: {\n      required: 'Start time is required',\n    },\n    endAt: {\n      required: 'End time is required',\n      validate: (value) =>\n        dayjs(value).isAfter(dayjs(startAtRef.current)) || 'End time must be after start time',\n    },\n    status: {\n      required: 'Status is required',\n    },\n  };\n\n  useEffect(() => {\n    if (!isNew) {\n      dispatch(getTask(taskID));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isNew && selectedTask) {\n      setValue('name', selectedTask.name);\n      setValue('description', selectedTask.description);\n      setValue('startAt', dayjs(selectedTask.startAt).format('YYYY-MM-DDTHH:mm'));\n      setValue('endAt', dayjs(selectedTask.endAt).format('YYYY-MM-DDTHH:mm'));\n      setValue('status', selectedTask.status);\n      setAssignees(selectedTask.assignees);\n    }\n  }, [selectedTask]);\n\n  const onSubmit = (values) => {\n    const startAt = dayjs(values.startAt).format('YYYY-MM-DDTHH:mm:ssZ');\n    const endAt = dayjs(values.endAt).format('YYYY-MM-DDTHH:mm:ssZ');\n\n    if (isNew) {\n      dispatch(createTask({ ...values, event: eventID, startAt, endAt, assignees }));\n    } else {\n      dispatch(updateTask({ ...values, id: taskID, event: eventID, startAt, endAt, assignees }));\n    }\n  };\n\n  const onAddMember = (member) => {\n    if (!assignees.find((a) => a.id === member.id)) {\n      setAssignees([...assignees, member]);\n    }\n  };\n\n  const onRemoveMember = (member) => {\n    setAssignees(assignees.filter((m) => m.id !== member.id));\n  };\n\n  const onClose = () => {\n    navigator(location.state?.backgroundLocation?.pathname || -1);\n  };\n\n  return (\n    <Modal isOpen onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent\n        sx={{\n          maxWidth: 'max-content',\n        }}\n      >\n        <ModalCloseButton />\n        <ModalHeader>\n          <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"teal.600\">\n            <Avatar\n              bg=\"teal.500\"\n              color=\"whiteAlpha.900\"\n              icon={<FontAwesomeIcon icon={regular('calendar-plus')} />}\n            />\n            &nbsp;Cập nhật công việc\n          </Text>\n        </ModalHeader>\n        <ModalBody\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '0.5rem',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flex: 1,\n              flexDirection: 'column',\n              gap: '0.5rem',\n              p: 2,\n            }}\n            as=\"form\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <ValidatedInput\n              control={control}\n              name=\"name\"\n              type=\"text\"\n              label=\"Tên công việc\"\n              rules={formRules.name}\n            />\n\n            <ValidatedInput\n              control={control}\n              name=\"description\"\n              type=\"textarea\"\n              label=\"Mô tả\"\n              rules={formRules.description}\n            />\n\n            <ValidatedInput\n              control={control}\n              name=\"startAt\"\n              type=\"datetime-local\"\n              label=\"Bắt đầu\"\n              rules={formRules.startAt}\n            />\n\n            <ValidatedInput\n              control={control}\n              name=\"endAt\"\n              type=\"datetime-local\"\n              label=\"Kết thúc\"\n              rules={formRules.endAt}\n            />\n\n            {taskID && (\n              <Controller\n                name=\"status\"\n                rules={formRules.status}\n                control={control}\n                render={({ field: { onChange, onBlur, value, ref }, fieldState: { error } }) => (\n                  <FormControl isInvalid={!!error}>\n                    <FormLabel>Trạng thái</FormLabel>\n                    <Select onChange={onChange} onBlur={onBlur} value={value} ref={ref}>\n                      <option value={EventStatuses.CREATED}>{EventStatuses.CREATED}</option>\n                      <option value={EventStatuses.IN_PROGRESS}>{EventStatuses.IN_PROGRESS}</option>\n                      <option value={EventStatuses.DONE}>{EventStatuses.DONE}</option>\n                    </Select>\n                    {error && <FormErrorMessage>{error?.message}</FormErrorMessage>}\n                  </FormControl>\n                )}\n              />\n            )}\n\n            <Box\n              direction=\"row\"\n              sx={{\n                maxW: '249px',\n                flexWrap: 'wrap',\n                justifyContent: 'flex-start',\n                span: { width: '1.5rem', height: '1.5rem', m: 1, div: { fontSize: '9pt' } },\n              }}\n            >\n              {assignees?.map((member) => (\n                <Box\n                  cursor=\"pointer\"\n                  display=\"inline-block\"\n                  key={`member-${member.id}`}\n                  onClick={() => onRemoveMember(member)}\n                >\n                  <Avatar name={member.name} src={member.avatarUrl} />\n                </Box>\n              ))}\n            </Box>\n\n            <Button type=\"submit\" width=\"100%\" mt={2} colorScheme=\"facebook\">\n              <FontAwesomeIcon icon={solid('floppy-disk')} />\n              &nbsp;Lưu\n            </Button>\n          </Box>\n\n          <Box\n            sx={{\n              display: 'flex',\n              flex: 1,\n              flexDirection: 'column',\n              gap: '0.5rem',\n              p: 2,\n              width: 'max-content',\n            }}\n          >\n            <Text fontWeight=\"medium\">Thành viên:</Text>\n            {selectedEvent?.members?.length > 0 && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '0.3rem',\n                  width: '100%',\n                  alignItems: 'start',\n                }}\n              >\n                {selectedEvent?.members?.map((user) => (\n                  <Button\n                    key={JSON.stringify(user)}\n                    variant=\"ghost\"\n                    onClick={() => onAddMember(user)}\n                  >\n                    <Avatar\n                      key={`user-${user.id}`}\n                      name={user.login}\n                      src={user.avatarUrl}\n                      size=\"sm\"\n                      bg=\"teal.500\"\n                      color=\"whiteAlpha.900\"\n                    />\n                    &nbsp;{user.login}\n                  </Button>\n                ))}\n              </Box>\n            )}\n          </Box>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Box, Button, Heading, Input, Text, theme } from '@chakra-ui/react';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport EventList from './EventList';\nimport { EventStatuses, EventStatusLabels } from './utils';\nimport { fetchEvents, reorder } from './eventMgmtSlice';\nimport CreateEvent from './CreateEvent';\nimport EventDetail from './EventDetail';\nimport EditTask from './EditTask';\n\nfunction EventMgmt() {\n  const dispatch = useDispatch();\n  const navigator = useNavigate();\n  const location = useLocation();\n\n  const handleDragEnd = (result) => {\n    const { source, destination } = result;\n\n    // Dragged outside the list\n    if (!destination) {\n      return;\n    }\n\n    // Dragged to the same position\n    if (source.droppableId === destination.droppableId) {\n      dispatch(\n        reorder({\n          sourceIndex: source.index,\n          destinationIndex: destination.index,\n          statusName: source.droppableId,\n        })\n      );\n    }\n\n    // Dragged to a different list\n    if (source.droppableId !== destination.droppableId) {\n      // eslint-disable-next-line no-console\n      console.log('Dragged to a different list');\n    }\n  };\n\n  const onClickNewEvent = () => {\n    navigator('new', { state: { backgroundLocation: location } });\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <Heading color={theme.colors.green[500]} variant=\"h1\" size=\"lg\">\n        Sự kiện\n      </Heading>\n      <Box sx={{ display: 'flex', flexDir: 'row', justifyContent: 'space-between', mt: 5, gap: 5 }}>\n        <Box sx={{ display: 'flex', flexDir: 'row', flex: 1 }} as=\"form\" noValidate>\n          <Input placeholder=\"Tìm kiếm...\" />\n          <Button type=\"submit\">\n            <FontAwesomeIcon icon={solid('magnifying-glass')} />\n          </Button>\n        </Box>\n        <Button colorScheme=\"green\" onClick={onClickNewEvent}>\n          <FontAwesomeIcon icon={solid('plus')} />\n          &nbsp;\n          <Text\n            display={{\n              base: 'none',\n              md: 'inline',\n            }}\n          >\n            Thêm sự kiện\n          </Text>\n        </Button>\n      </Box>\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            mt: 5,\n            gap: '2rem',\n          }}\n        >\n          <EventList\n            title=\"Sắp diễn ra\"\n            dropgableID={EventStatusLabels[EventStatuses.CREATED]}\n            eventStatus={EventStatuses.CREATED}\n          />\n          <EventList\n            title=\"Đang diễn ra\"\n            dropgableID={EventStatusLabels[EventStatuses.IN_PROGRESS]}\n            eventStatus={EventStatuses.IN_PROGRESS}\n          />\n          <EventList\n            title=\"Đã kết thúc\"\n            dropgableID={EventStatusLabels[EventStatuses.DONE]}\n            eventStatus={EventStatuses.DONE}\n          />\n        </Box>\n      </DragDropContext>\n    </Box>\n  );\n}\n\nexport default function EventMgmtPage() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { updateSuccess } = useSelector((state) => state.eventMgmt);\n\n  useEffect(() => {\n    dispatch(fetchEvents({ page: 0, size: 30 }));\n  }, []);\n\n  useEffect(() => {\n    if (updateSuccess) {\n      dispatch(fetchEvents({ page: 0, size: 30 }));\n    }\n  }, [updateSuccess]);\n\n  return (\n    <>\n      <Routes location={location.state?.backgroundLocation || location}>\n        <Route path=\"/\" element={<EventMgmt />} />\n        <Route path=\"/:eventID\" element={<EventDetail />} />\n      </Routes>\n      {location.state?.backgroundLocation && (\n        <Routes>\n          <Route path=\"/new\" element={<CreateEvent />} />\n          <Route path=\"/:eventID/tasks/new\" element={<EditTask />} />\n          <Route path=\"/:eventID/tasks/:taskID\" element={<EditTask />} />\n        </Routes>\n      )}\n    </>\n  );\n}\n"],"names":["InputComponent","type","onChange","onBlur","value","innerRef","ref","ValidatedInput","control","name","label","rules","sx","render","field","error","fieldState","isInvalid","message","EventCard","eventID","imageURL","startAt","endAt","members","navigator","useNavigate","convertTime","time","Date","toLocaleString","timeZone","flexDirection","p","mb","shadow","borderWidth","borderRadius","src","alt","fontWeight","fontSize","alignItems","gap","icon","color","justifyContent","size","max","map","member","login","avatarUrl","mt","colorScheme","onClick","EventList","title","dropgableID","eventStatus","useState","events","setEvents","useSelector","state","eventMgmt","loading","createdEvents","inprogressEvents","doneEvents","useEffect","EventStatuses","display","flex","length","droppableId","provided","snapshot","as","bgColor","isDraggingOver","theme","isIndeterminate","event","index","draggableId","id","providedDrag","snapshotDrag","draggableProps","dragHandleProps","isDragging","description","tags","CreateEvent","dispatch","useDispatch","location","useLocation","useForm","defaultValues","dayjs","format","handleSubmit","watch","startAtRef","useRef","current","formRules","required","validate","isAfter","isOpen","onClose","backgroundLocation","pathname","bg","width","onSubmit","values","createEvent","TicketList","data","onClickDetail","TicketComponent","d","status","Ticket","EventDetail","useParams","selectedEvent","users","tasks","updateSuccess","setValue","ticketType","userEmailRef","setMembers","TaskCard","props","assignees","getEvent","fetchTasks","page","onClickTaskDetail","taskID","variant","updateEvent","direction","flexWrap","span","height","m","div","cursor","filter","onRemoveMember","placeholder","fetchUsers","q","user","JSON","stringify","flexDir","noValidate","base","md","task","EditTask","isNew","undefined","selectedTask","add","setAssignees","getTask","maxWidth","createTask","updateTask","maxW","find","a","EventMgmt","onDragEnd","result","source","destination","reorder","sourceIndex","destinationIndex","statusName","console","log","EventStatusLabels","EventMgmtPage","fetchEvents","path","element"],"sourceRoot":""}